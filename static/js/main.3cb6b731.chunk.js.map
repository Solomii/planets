{"version":3,"sources":["constants/ActionTypes.js","reducers/planets.js","reducers/index.js","components/Header/Header.js","actions/planets.js","api/planets.js","components/Planets/Planets.js","containers/PlanetsContainer.js","components/Footer/Footer.js","components/App/App.js","index.js"],"names":["GET_ALL_DATA_REQUEST","GET_ALL_DATA_SUCCESS","GET_ALL_DATA_FAIL","GET_ALL_PLANETS_REQUEST","GET_ALL_PLANETS_SUCCESS","GET_ALL_PLANETS_FAIL","initialState","planet","isLoading","error","data","alldata","planets","state","action","type","payload","combineReducers","HeaderPlanets","className","href","getPlanet","dispatch","a","fetch","response","json","res","getData","getPlanetFunc","getAllDataFunc","Planets","allData","getAllData","getAllPlanets","bodies","map","i","englishName","onClick","allPlanets","connect","getPlanets","PlanetsFooter","src","App","middleware","thunk","store","createStore","reducer","applyMiddleware","render","document","getElementById"],"mappings":"6SAAaA,EAAuB,oBACvBC,EAAuB,oBACvBC,EAAoB,iBAEpBC,EAA0B,uBAC1BC,EAA0B,uBAC1BC,EAAuB,oBCG9BC,EAAe,CACnBC,OAAQ,CACNC,UAAW,KACXC,MAAO,KACPC,KAAM,MAGRC,QAAS,CACPH,UAAW,KACXC,MAAO,KACPC,KAAM,OAiEKE,EA7DC,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAChD,OAAQA,EAAOC,MACb,KAAKZ,EACH,OAAO,2BACFU,GADL,IAEEN,OAAQ,CACNC,WAAW,EACXC,MAAO,KACPC,KAAM,QAGZ,KAAKN,EACH,OAAO,2BACFS,GADL,IAEEN,OAAQ,CACNC,WAAW,EACXC,OAAO,EACPC,KAAMI,EAAOE,WAGnB,KAAKX,EACH,OAAO,2BACFQ,GADL,IAEEN,OAAQ,CACNC,WAAW,EACXC,MAAOK,EAAOE,QACdN,MAAM,KAGZ,KAAKV,EACH,OAAO,2BACFa,GADL,IAEEF,QAAS,CACPH,WAAW,EACXC,MAAO,KACPC,KAAM,QAGZ,KAAKT,EACH,OAAO,2BACFY,GADL,IAEEF,QAAS,CACPH,WAAW,EACXC,OAAO,EACPC,KAAMI,EAAOE,WAGnB,KAAKd,EACH,OAAO,2BACFW,GADL,IAEEF,QAAS,CACPH,WAAW,EACXC,MAAOK,EAAOE,QACdN,MAAM,KAGZ,QACE,OAAOG,IC7EEI,cAAgB,CAC7BL,Y,8BCiDaM,EAhDO,WACpB,OACE,4BAAQC,UAAU,kBAChB,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,uBAEb,yCAGJ,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,2BACb,uBACEA,UAAU,sBACVC,KAAK,sCAEL,kBAAC,IAAD,QAGJ,yBAAKD,UAAU,2BACb,uBACEA,UAAU,sBACVC,KAAK,+CAEL,kBAAC,IAAD,QAGJ,yBAAKD,UAAU,2BACb,uBACEA,UAAU,sBACVC,KAAK,uCAEL,kBAAC,IAAD,QAGJ,yBAAKD,UAAU,2BACb,uBACEA,UAAU,sBACVC,KAAK,uCAEL,kBAAC,IAAD,Y,wBClCRC,EAAS,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DAChBD,EAAS,CAAEP,KAAMZ,IADD,kBCLhBqB,MAAM,oDDKU,cAIRC,EAJQ,gBAKIA,EAASC,OALb,OAKRC,EALQ,OAMdL,EAAS,CAAEP,KAAMX,EAAyBY,QAASW,IANrC,kDAQdL,EAAS,CAAEP,KAAMV,EAAsBW,QAAQ,EAAD,KARhC,0DAAH,sDAWTY,EAAO,uCAAG,WAAON,GAAP,iBAAAC,EAAA,6DACdD,EAAS,CAAEP,KAAMf,IADH,kBCrBdwB,MACE,8EDoBY,cAINC,EAJM,gBAKMA,EAASC,OALf,OAKNC,EALM,OAMZL,EAAS,CAAEP,KAAMd,EAAsBe,QAASW,IANpC,kDAQZL,EAAS,CAAEP,KAAMb,EAAmBc,QAAQ,EAAD,KAR/B,0DAAH,sDAWAa,EAAgB,SAACP,GAC5B,OAAO,kBAAMD,EAAUC,KAGZQ,EAAiB,SAACR,GAC7B,OAAO,kBAAMM,EAAQN,KEcRS,G,MAhDC,SAAC,GAA4C,IACvDC,EADapB,EAAyC,EAAzCA,QAAwBqB,GAAiB,EAAhCC,cAAgC,EAAjBD,YA+BzC,OA5BED,EADEpB,EAAQD,SAAWC,EAAQD,QAAQD,MAAQE,EAAQD,QAAQD,KAAKyB,OACxDvB,EAAQD,QAAQD,KAAKyB,OAAOC,KAAI,SAACC,GAAD,OACxC,yBAAKlB,UAAU,oBACZkB,EAAEC,YADL,IACkB,iCAgBV,8BAWV,yBAAKnB,UAAU,eACb,4BAAQA,UAAU,qBAAqBoB,QAASN,GAAhD,WAMA,yBAAKd,UAAU,6BACb,yBAAKA,UAAU,qBAAqBa,IAEtC,yBAAKb,UAAU,6BACb,yBAAKA,UAAU,qBA1CRqB,eCmBAC,eAVS,SAAC5B,GAAD,MAAY,CAClCD,QAASC,EAAMD,YAGU,SAACU,GAC1B,MAAO,CACLoB,WAAYb,EAAcP,GAC1BW,WAAYH,EAAeR,MAGhBmB,EAlBU,SAAC,GAAD,IAAG7B,EAAH,EAAGA,QAASsB,EAAZ,EAAYA,cAAeD,EAA3B,EAA2BA,WAA3B,OACvB,kBAAC,EAAD,CACErB,QAASA,EACTqB,WAAYA,EACZC,cAAeA,OCiBJS,G,MAzBO,WACpB,OACE,4BAAQxB,UAAU,kBAChB,6BAASA,UAAU,8BACjB,yBAAKA,UAAU,sCACb,uBAAGA,UAAU,uBAAb,uBACA,uBACEA,UAAU,sBACVC,KAAK,0CAFP,2DAQJ,6BAASD,UAAU,8BACjB,yBAAKA,UAAU,sCACb,uBAAGA,UAAU,uBAAb,uBACiB,yBAAKyB,IAAI,KAD1B,uECAKC,MAXf,WACE,OACE,yBAAK1B,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MAEA,kBAAC,EAAD,Q,gBCDA2B,EAAa,CAACC,KAKpB,IAAMC,EAAQC,YAAYC,EAASC,IAAe,WAAf,EAAmBL,IAItDM,iBACE,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.3cb6b731.chunk.js","sourcesContent":["export const GET_ALL_DATA_REQUEST = \"getalldatarequest\";\r\nexport const GET_ALL_DATA_SUCCESS = \"getalldatasuccess\";\r\nexport const GET_ALL_DATA_FAIL = \"getalldatafail\";\r\n\r\nexport const GET_ALL_PLANETS_REQUEST = \"getallplanetsrequest\";\r\nexport const GET_ALL_PLANETS_SUCCESS = \"getallplanetssuccess\";\r\nexport const GET_ALL_PLANETS_FAIL = \"getallplanetsfail\";\r\n","import {\r\n  GET_ALL_DATA_REQUEST,\r\n  GET_ALL_DATA_SUCCESS,\r\n  GET_ALL_DATA_FAIL,\r\n  GET_ALL_PLANETS_REQUEST,\r\n  GET_ALL_PLANETS_SUCCESS,\r\n  GET_ALL_PLANETS_FAIL,\r\n} from \"../constants/ActionTypes\";\r\n\r\nconst initialState = {\r\n  planet: {\r\n    isLoading: null,\r\n    error: null,\r\n    data: null,\r\n  },\r\n\r\n  alldata: {\r\n    isLoading: null,\r\n    error: null,\r\n    data: null,\r\n  },\r\n};\r\n\r\nconst planets = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_PLANETS_REQUEST:\r\n      return {\r\n        ...state,\r\n        planet: {\r\n          isLoading: true,\r\n          error: null,\r\n          data: null,\r\n        },\r\n      };\r\n    case GET_ALL_PLANETS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        planet: {\r\n          isLoading: false,\r\n          error: false,\r\n          data: action.payload,\r\n        },\r\n      };\r\n    case GET_ALL_PLANETS_FAIL:\r\n      return {\r\n        ...state,\r\n        planet: {\r\n          isLoading: false,\r\n          error: action.payload,\r\n          data: false,\r\n        },\r\n      };\r\n    case GET_ALL_DATA_REQUEST:\r\n      return {\r\n        ...state,\r\n        alldata: {\r\n          isLoading: true,\r\n          error: null,\r\n          data: null,\r\n        },\r\n      };\r\n    case GET_ALL_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        alldata: {\r\n          isLoading: false,\r\n          error: false,\r\n          data: action.payload,\r\n        },\r\n      };\r\n    case GET_ALL_DATA_FAIL:\r\n      return {\r\n        ...state,\r\n        alldata: {\r\n          isLoading: false,\r\n          error: action.payload,\r\n          data: false,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default planets;\r\n","import { combineReducers } from \"redux\";\r\nimport planets from \"./planets\";\r\n\r\nexport default combineReducers({\r\n  planets,\r\n});\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport { FaFacebookF, FaTwitter, FaGithub } from \"react-icons/fa\";\r\nimport { SiCircle } from \"react-icons/si\";\r\n\r\nconst HeaderPlanets = () => {\r\n  return (\r\n    <header className=\"planets-header\">\r\n      <div className=\"planets-header-wrapper\">\r\n        <div className=\"planets-header-logo-text\">\r\n          <div className=\"planets-header-text\">\r\n            {/* <img src=\"../../img/logo.png\" alt=\"\" /> */}\r\n            <h3>Planets</h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"planets-header-social-icons\">\r\n          <div className=\"planets-header-box-icon\">\r\n            <a\r\n              className=\"planets-header-icon\"\r\n              href=\"https://github.com/systeme-solaire\"\r\n            >\r\n              <FaGithub />\r\n            </a>\r\n          </div>\r\n          <div className=\"planets-header-box-icon\">\r\n            <a\r\n              className=\"planets-header-icon\"\r\n              href=\"https://www.facebook.com/le.systeme.solaire\"\r\n            >\r\n              <FaFacebookF />\r\n            </a>\r\n          </div>\r\n          <div className=\"planets-header-box-icon\">\r\n            <a\r\n              className=\"planets-header-icon\"\r\n              href=\"https://twitter.com/systeme_solaire\"\r\n            >\r\n              <FaTwitter />\r\n            </a>\r\n          </div>\r\n          <div className=\"planets-header-box-icon\">\r\n            <a\r\n              className=\"planets-header-icon\"\r\n              href=\"https://www.le-systeme-solaire.net/\"\r\n            >\r\n              <SiCircle />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\nexport default HeaderPlanets;\r\n","import {\r\n  GET_ALL_DATA_REQUEST,\r\n  GET_ALL_DATA_SUCCESS,\r\n  GET_ALL_DATA_FAIL,\r\n  GET_ALL_PLANETS_REQUEST,\r\n  GET_ALL_PLANETS_SUCCESS,\r\n  GET_ALL_PLANETS_FAIL,\r\n} from \"../constants/ActionTypes\";\r\n\r\nimport { getAllPlanets, getAllData } from \"../api/planets\";\r\n\r\nconst getPlanet = async (dispatch) => {\r\n  dispatch({ type: GET_ALL_PLANETS_REQUEST });\r\n\r\n  try {\r\n    const response = await getAllPlanets();\r\n    const res = await response.json();\r\n    dispatch({ type: GET_ALL_PLANETS_SUCCESS, payload: res });\r\n  } catch (e) {\r\n    dispatch({ type: GET_ALL_PLANETS_FAIL, payload: e });\r\n  }\r\n};\r\nconst getData = async (dispatch) => {\r\n  dispatch({ type: GET_ALL_DATA_REQUEST });\r\n\r\n  try {\r\n    const response = await getAllData();\r\n    const res = await response.json();\r\n    dispatch({ type: GET_ALL_DATA_SUCCESS, payload: res });\r\n  } catch (e) {\r\n    dispatch({ type: GET_ALL_DATA_FAIL, payload: e });\r\n  }\r\n};\r\nexport const getPlanetFunc = (dispatch) => {\r\n  return () => getPlanet(dispatch);\r\n};\r\n\r\nexport const getAllDataFunc = (dispatch) => {\r\n  return () => getData(dispatch);\r\n};\r\n","export const getAllData = () =>\r\n  fetch(\r\n    \"https://api.le-systeme-solaire.net/rest/bodies?filter[]=isPlanet,neq,false\"\r\n  );\r\n\r\nexport const getAllPlanets = () =>\r\n  fetch(\" https://api.le-systeme-solaire.net/rest/bodies/\");\r\n\r\n// https://api.le-systeme-solaire.net/rest.php/bodies?filter[]=isPlanet,neq,false\r\n// https://api.le-systeme-solaire.net/rest/bodies/\r\n","import React from \"react\";\r\nimport \"./Planets.css\";\r\nimport { useParams, Link, Switch, Route } from \"react-router-dom\";\r\n\r\nconst Planets = ({ planets, getAllPlanets, getAllData }) => {\r\n  let allData, allPlanets;\r\n  if (planets.alldata && planets.alldata.data && planets.alldata.data.bodies) {\r\n    allData = planets.alldata.data.bodies.map((i) => (\r\n      <div className=\"planets-box-name\">\r\n        {i.englishName} <br />\r\n        {/* {Object.keys(i).map(function (keyName, keyIndex) {\r\n          return (\r\n            <p>\r\n              {JSON.stringify(i, null, 2)}\r\n              {console.log(i[keyName])}\r\n            </p>\r\n          );\r\n        })} */}\r\n        {/* <Link to={\"/planets/bodies/\" + i.id}>More...</Link> */}\r\n        {/* <Switch>\r\n          <Route path=\"/planets/bodies/:id\">hggyy</Route>\r\n        </Switch> */}\r\n      </div>\r\n    ));\r\n  } else {\r\n    allData = <div></div>;\r\n  }\r\n\r\n  // if (planets.planet && planets.planet.data && planets.planet.data.bodies) {\r\n  //   allPlanets = planets.planet.data.bodies.map((i) => (\r\n  //     <div>{i.englishName}</div>\r\n  //   ));\r\n  // } else {\r\n  //   allPlanets = <div></div>;\r\n  // }\r\n  return (\r\n    <div className=\"planets-box\">\r\n      <button className=\"planets-box-button\" onClick={getAllData}>\r\n        Planets\r\n      </button>\r\n      {/* <button className=\"planets-box-button\" onClick={getAllPlanets}>\r\n        AllData\r\n      </button> */}\r\n      <div className=\"planets-box-names-wrapper\">\r\n        <div className=\"planets-box-names\">{allData}</div>\r\n      </div>\r\n      <div className=\"planets-box-names-wrapper\">\r\n        <div className=\"planets-box-names\">{allPlanets}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Planets;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPlanetFunc, getAllDataFunc } from \"../actions/planets\";\r\nimport planets from \"../reducers/planets\";\r\nimport Planets from \"../components/Planets/Planets\";\r\n\r\nconst PlanetsContainer = ({ planets, getAllPlanets, getAllData }) => (\r\n  <Planets\r\n    planets={planets}\r\n    getAllData={getAllData}\r\n    getAllPlanets={getAllPlanets}\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  planets: state.planets,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getPlanets: getPlanetFunc(dispatch),\r\n    getAllData: getAllDataFunc(dispatch),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlanetsContainer);\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\nconst PlanetsFooter = () => {\r\n  return (\r\n    <footer className=\"planets-footer\">\r\n      <section className=\"planets-footer-section-one\">\r\n        <div className=\"planets-footer-section-one-wrapper\">\r\n          <p className=\"planets-footer-text\">By the same aothor:</p>\r\n          <a\r\n            className=\"planets-footer-http\"\r\n            href=\"https://mobile.le-systeme-solaire.net/\"\r\n          >\r\n            Le Système solaire à portée de votre souris.\r\n          </a>\r\n        </div>\r\n      </section>\r\n      <section className=\"planets-footer-section-two\">\r\n        <div className=\"planets-footer-section-two-wrapper\">\r\n          <p className=\"planets-footer-text\">\r\n            Made with ♥ in <img src=\"\" /> by Christophe - Copyright © 2019-2020\r\n            All rights reserved.\r\n          </p>\r\n        </div>\r\n      </section>\r\n    </footer>\r\n  );\r\n};\r\nexport default PlanetsFooter;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport HeaderPlanets from \"../Header/Header\";\r\n// import PlanetsDetals from \"../PlanetDetals/PlanetsDetals\";\r\nimport PlanetsContainer from \"../../containers/PlanetsContainer\";\r\nimport PlanetsFooter from \"../Footer/Footer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HeaderPlanets />\r\n      <PlanetsContainer />\r\n      {/* <PlanetsDetals /> */}\r\n      <PlanetsFooter />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// import React, { Component } from \"react\";\r\n\r\n// export default class Planets extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       items: [],\r\n//       isLoaded: false,\r\n//     };\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     fetch(`https://api.le-systeme-solaire.net/rest/bodies`, {\r\n//       mode: \"no-cors\",\r\n//     })\r\n//       .then((response) => response.json())\r\n//       .then((json) => {\r\n//         this.setState({\r\n//           isLoaded: true,\r\n//           items: json.api_products,\r\n//         });\r\n//       });\r\n//   }\r\n\r\n//   render() {\r\n//     let { isLoaded, items } = this.state;\r\n\r\n//     if (!isLoaded) {\r\n//       return <div>Loading... </div>;\r\n//     } else {\r\n//       return (\r\n//         <ul>\r\n//           {items.map((item) => (\r\n//             <li key={item.id}>{item.title}</li>\r\n//           ))}\r\n//         </ul>\r\n//       );\r\n//     }\r\n//   }\r\n// }\r\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducers\";\n// import { getAllProducts } from \"./actions\";\nimport App from \"./components/App/App\";\nimport \"./index.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst middleware = [thunk];\nif (process.env.NODE_ENV !== \"production\") {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(reducer, applyMiddleware(...middleware));\n\n//store.dispatch(getAllProducts())\n\nrender(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}